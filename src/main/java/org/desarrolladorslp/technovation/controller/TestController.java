package org.desarrolladorslp.technovation.controller;

import org.desarrolladorslp.technovation.config.auth.TokenInfo;
import org.desarrolladorslp.technovation.models.User;
import org.desarrolladorslp.technovation.services.impl.UserService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.core.context.SecurityContextHolder;
import org.springframework.security.oauth2.provider.OAuth2Authentication;
import org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationDetails;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RestController;

/**
 * Test controller created for dev purposes to validate we can access the endpoints using
 * the bearer token generated by spring boot oAuth server while we don't have the real controllers
 */
@RestController
public class TestController {

    private UserService userService;

    @GetMapping("/hello")
    public String helloWorldGet() {
        return "hello world!";
    }

    @PostMapping("/hello")
    public User helloWorldPost() {
        return userService.findByUsername((String) SecurityContextHolder.getContext().getAuthentication().getPrincipal()).orElseThrow();
    }

    @PutMapping("/hello")
    public OAuth2Authentication helloWorldPut(OAuth2Authentication authentication) {

        OAuth2AuthenticationDetails details = (OAuth2AuthenticationDetails) authentication.getDetails();
        TokenInfo tokenInfo = (TokenInfo) details.getDecodedDetails();

        return authentication;
    }

    @Autowired
    public void setUserService(UserService userService) {
        this.userService = userService;
    }
}
